<?xml version="1.0"?>
<launch>

<!--   <param name="robot_description"
    command="$(find xacro)/xacro.py '$(find ales_description)/urdf/ales_rviz.xacro'" /> -->
  
  <param name="robot_description"
    command="$(find xacro)/xacro.py '$(find ales_description)/urdf/ales.xacro'" />    
    <!--Controller Manager-->
  
  <include file="$(find pr2_controller_manager)/controller_manager.launch" />

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
      <param name="use_gui" value="False"/>
  </node>
  <!-- joint states to tf -->  
  <node pkg="robot_state_publisher" type="state_publisher" name="ales_robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <remap from="joint_states" to="/ales/joint_states" />
  </node>
  
  <!-- TF Buffer Server -->
  <node pkg="tf2_ros" type="buffer_server" name="tf2_buffer_server" output="screen">
    <param name="buffer_size" value="1200.0"/>
  </node>    

  <!-- Call a python script to the run a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
	args="-urdf -model ales -param robot_description  -x 1.85 -y -0.56 -z 0.2"/>
  <!--  -->
  <!-- Spawn a robot into Gazebo -->

  <!-- <node pkg="message_to_tf" type="message_to_tf" name="ground_truth_to_tf" output="screen">
    <param name="odometry_topic" value="ground_truth/state" />
    <param name="stabilized_frame_id" value="base_footprint" />
  </node> -->

</launch>
